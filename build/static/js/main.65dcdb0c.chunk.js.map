{"version":3,"sources":["features/auth/domain/services/session.ts","core/config/themes.ts","core/context/context.tsx","core/presentation/components/notes-drawer/Drawer.tsx","core/presentation/components/navbar/navbar-movile/NavbarMobile.tsx","core/presentation/components/navbar/navbar-web/MainLogo.tsx","features/auth/presentation/components/LogoutButton.tsx","core/presentation/components/navbar/navbar-web/Tabs.tsx","core/presentation/components/navbar/navbar-web/NavbarWeb.tsx","core/presentation/components/RightSidebar.tsx","core/presentation/layouts/ProfessorLayout.tsx","core/router/routes.tsx","core/presentation/pages/Scheduler.tsx","core/presentation/pages/Calendar.tsx","core/presentation/pages/Data.tsx","core/router/user-control/user-control.routes.tsx","core/router/user-control/router-manager.tsx","core/router/Routes-App.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["session","name","privileges","lightMode","backgroundColor","color","darkmode","AppTheme","localStorage","getItem","UserContext","createContext","ThemeContext","DrawerContext","visibleDrawer","setVisibleDrawer","Object","NotesDrawer","children","useContext","useState","visible","setvisible","useEffect","title","onClose","NavbarMobile","path","history","useHistory","selectedTab","setselectedTab","align","justify","style","padding","CalendarFilled","fontSize","onClick","push","triggerSubMenuAction","expandIcon","AppstoreOutlined","selectedKeys","mode","popupOffset","routerManager","map","e","Item","console","log","handleOnClick","key","MainLogo","size","strong","LogoutButton","type","danger","marginLeft","TabPane","Tabs","NavTabs","activeTab","activeKey","paddingLeft","onTabClick","_","tabBarExtraContent","tab","NavbarWeb","paddingRight","id","cursor","RightSidebar","paddingTop","paddingBottom","height","borderLeft","display","ProfileOutlined","ProfessorLayout","theme","user","isMobile","useMediaQuery","query","flex","routes","index","exact","layout","component","to","scheduler","calendar","data","error","justifyContent","alignItems","userControlRoutes","RoutesApp","setUser","setTheme","setvisibleDrawer","Provider","value","route","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65dcdb0c.chunk.js","sourcesContent":["import User from \"../models/User\";\n\nexport const session = {\n  // TODO: just mocked the user session, you have to do it by yourself\n  getUser: (): User => {\n    return {\n      name: \"Jorge\",\n      privileges: \"professor\",\n    };\n  },\n};\n","import { CSSProperties } from \"react\";\n\nconst lightMode: CSSProperties = {\n  backgroundColor: \"#E1E2E3\",\n  color: \"#585858\",\n};\n\nconst darkmode: CSSProperties = {\n  backgroundColor: \"#D6D6D6\",\n  color: \"#585858\",\n};\n\nconst AppTheme = {\n  getTheme: () => {\n    let theme = localStorage.getItem(\"theme\") ?? \"Light\";\n    return theme === \"Light\" ? lightMode : darkmode;\n  },\n};\n\n//NOTE: DarkMode anyadiendo variable a React Context\nexport { AppTheme };\n","import { createContext } from \"react\";\nimport { session } from \"../../features/auth/domain/services/session\";\nimport { AppTheme } from \"../config/themes\";\n\nconst UserContext = createContext(session.getUser());\nconst ThemeContext = createContext(AppTheme.getTheme());\nconst DrawerContext = createContext({\n  visibleDrawer: false,\n  setVisibleDrawer: Object(),\n});\n\nexport { UserContext, ThemeContext, DrawerContext };\n","import { Drawer } from \"antd\";\nimport { FC, useContext, useEffect, useState } from \"react\";\nimport { DrawerContext } from \"../../../context/context\";\n\nexport const NotesDrawer: FC = ({ children }) => {\n  const { visibleDrawer, setVisibleDrawer } = useContext(DrawerContext);\n  const [visible, setvisible] = useState(false);\n\n  useEffect(() => {\n    setvisible(visibleDrawer);\n  }, [visibleDrawer]);\n\n  const onClose = () => {\n    setVisibleDrawer(false);\n  };\n\n  return (\n    <>\n      <Drawer title=\"Basic drawer\" visible={visible} onClose={onClose}>\n        {/*TODO: hacer el componente de notas en features para anyadirlo*/}\n        {children}\n      </Drawer>\n    </>\n  );\n};\n","import { Row, Menu } from \"antd\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { CalendarFilled, AppstoreOutlined } from \"@ant-design/icons\";\nimport { routerManager } from \"../../../../router/user-control/router-manager\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\n\ntype Props = {\n  path: string;\n};\n\nexport const NavbarMobile: FC<Props> = ({ path }) => {\n  const history = useHistory();\n  const [selectedTab, setselectedTab] = useState(\"/calendar\");\n\n  const handleOnClick = (path: string) => {\n    console.log(path);\n    history.push(path);\n  };\n\n  useEffect(() => {\n    setselectedTab(path);\n  }, [path]);\n\n  return (\n    <Row align=\"middle\" justify=\"space-between\" style={{ padding: 5 }}>\n      <CalendarFilled\n        style={{ fontSize: 35, color: \"#1890FF\" }}\n        onClick={() => history.push(\"/\")}\n      />\n      <Menu\n        triggerSubMenuAction=\"click\"\n        expandIcon={\n          <AppstoreOutlined style={{ color: \"666666\", fontSize: 25 }} />\n        }\n        selectedKeys={[selectedTab]}\n        mode=\"vertical\"\n      >\n        <SubMenu key=\"submenu\" popupOffset={[-50, 50]}>\n          {routerManager().map((e) => {\n            return (\n              e.name && (\n                <Menu.Item key={e.path} onClick={(e) => handleOnClick(e.key)}>\n                  {e.name}\n                </Menu.Item>\n              )\n            );\n          })}\n        </SubMenu>\n      </Menu>\n    </Row>\n  );\n};\n","import { Space } from \"antd\";\nimport { CalendarFilled } from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\n\nexport const MainLogo = () => {\n  return (\n    <Space align=\"center\" size=\"middle\">\n      <CalendarFilled style={{ fontSize: 45, color: \"#1890FF\" }} />\n      <Text strong style={{ fontSize: 30, color: \"grey\" }}>\n        D & D Calendar\n      </Text>\n    </Space>\n  );\n};\n","import { Button } from \"antd\";\n\nexport const LogoutButton = () => {\n  return (\n    <Button type=\"primary\" danger size=\"large\" style={{ marginLeft: 30 }}>\n      Salir\n    </Button>\n  );\n};\n","import { FC } from \"react\";\nimport { Tabs } from \"antd\";\nimport { LogoutButton } from \"../../../../../features/auth/presentation/components/LogoutButton\";\nimport { routerManager } from \"../../../../router/user-control/router-manager\";\n\ntype Props = {\n  handleOnClick: Function;\n  activeTab: string;\n};\n\nconst { TabPane } = Tabs;\n\nexport const NavTabs: FC<Props> = ({ handleOnClick, activeTab }) => {\n  return (\n    <Tabs\n      activeKey={activeTab}\n      style={{\n        paddingLeft: 20,\n      }}\n      size=\"large\"\n      onTabClick={(key, _) => handleOnClick(key)}\n      tabBarExtraContent={<LogoutButton />}\n    >\n      {routerManager().map((e) => {\n        return e.name && <TabPane tab={e.name} key={e.path} />;\n      })}\n    </Tabs>\n  );\n};\n","import { Row } from \"antd\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { MainLogo } from \"./MainLogo\";\nimport { NavTabs } from \"./Tabs\";\n\ntype Props = {\n  path: string;\n};\n\nexport const NavbarWeb: FC<Props> = ({ path }) => {\n  const history = useHistory();\n  const [selectedTab, setselectedTab] = useState(\"/calendar\");\n\n  const handleOnClick = (path: string) => {\n    history.push(path);\n  };\n\n  useEffect(() => {\n    setselectedTab(path);\n  }, [path]);\n\n  return (\n    <Row\n      align=\"middle\"\n      justify=\"space-between\"\n      style={{ paddingLeft: 20, paddingRight: 20 }}\n    >\n      <div\n        id=\"mainLogo\"\n        onClick={() => handleOnClick(\"/\")}\n        style={{ cursor: \"pointer\" }}\n      >\n        <MainLogo />\n      </div>\n      <NavTabs activeTab={selectedTab} handleOnClick={handleOnClick} />\n    </Row>\n  );\n};\n","import { ProfileOutlined } from \"@ant-design/icons\";\nimport { useContext } from \"react\";\nimport { DrawerContext } from \"../../context/context\";\n\nexport const RightSidebar = () => {\n  const { setVisibleDrawer } = useContext(DrawerContext);\n\n  const toggleDrawer = () => {\n    setVisibleDrawer(true);\n  };\n\n  return (\n    <div\n      style={{\n        paddingTop: 10,\n        paddingBottom: 10,\n        backgroundColor: \"#D6D6D6\",\n        height: \"100vh\",\n        borderLeft: \"2px solid #1890FF\",\n      }}\n    >\n      <div style={{ display: \"grid\" }}>\n        <ProfileOutlined\n          onClick={() => toggleDrawer()}\n          style={{ fontSize: 30, color: \"purple\" }}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Col, Row } from \"antd\";\nimport { CSSProperties, FC } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { NotesDrawer } from \"../components/notes-drawer/Drawer\";\nimport { NavbarMobile } from \"../components/navbar/navbar-movile/NavbarMobile\";\nimport { NavbarWeb } from \"../components/navbar/navbar-web/NavbarWeb\";\nimport { RightSidebar } from \"../components/RightSidebar\";\n\ntype Props = {\n  user: String;\n  theme: CSSProperties;\n  path: string;\n};\n\nexport const ProfessorLayout: FC<Props> = ({ children, user, theme, path }) => {\n  const isMobile = useMediaQuery({ query: \"(max-width: 800px)\" });\n\n  return (\n    <>\n      {!isMobile ? <NavbarWeb path={path} /> : <NavbarMobile path={path} />}\n\n      <Row>\n        <Col flex={50}>\n          <div style={{ ...theme, height: \"100vh\" }}>{children}</div>\n        </Col>\n        <Col flex=\"auto\">\n          <RightSidebar />\n        </Col>\n      </Row>\n      <NotesDrawer>{/*TODO: Notes */}</NotesDrawer>\n    </>\n  );\n};\n","import Text from \"antd/lib/typography/Text\";\nimport { Redirect } from \"react-router-dom\";\nimport { ProfessorLayout } from \"../presentation/layouts/ProfessorLayout\";\nimport { Calendar } from \"../presentation/pages/Calendar\";\nimport { Data } from \"../presentation/pages/Data\";\nimport { Scheduler } from \"../presentation/pages/Scheduler\";\nimport RouteType from \"./models/RouteType\";\n\nconst index: RouteType = {\n  path: \"/\",\n  exact: true,\n  layout: ProfessorLayout,\n  component: () => <Redirect to=\"/scheduler\" />,\n};\n\nconst scheduler: RouteType = {\n  name: \"Horario\",\n  path: \"/scheduler\",\n  layout: ProfessorLayout,\n  component: Scheduler,\n};\n\nconst calendar: RouteType = {\n  name: \"Calendario\",\n  path: \"/calendar\",\n  layout: ProfessorLayout,\n  component: Calendar,\n};\n\nconst data: RouteType = {\n  name: \"Datos\",\n  path: \"/data\",\n  layout: ProfessorLayout,\n  component: Data,\n};\n\nconst error: RouteType = {\n  path: \"\",\n  layout: () => <div></div>,\n  component: () => (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Text type=\"danger\" strong>\n        ERROR\n      </Text>\n    </div>\n  ),\n};\n\nexport const routes = { index, scheduler, calendar, data, error };\n","import Text from \"antd/lib/typography/Text\";\n\nexport const Scheduler = () => {\n  return <Text>Scheduler</Text>;\n};\n","import Text from \"antd/lib/typography/Text\";\n\nexport const Calendar = () => {\n  return <Text>Calendar</Text>;\n};\n","import Text from \"antd/lib/typography/Text\";\n\nexport const Data = () => {\n  return <Text>Data</Text>;\n};\n","import RouteType from \"../models/RouteType\";\nimport { routes } from \"../routes\";\n\nexport const userControlRoutes = {\n  defaultRoutes: (): RouteType[] => {\n    return [\n      routes.index,\n      routes.scheduler,\n      routes.calendar,\n      routes.data,\n      routes.error,\n    ];\n  },\n  professorRoutes: (): RouteType[] => {\n    return [\n      routes.index,\n      routes.scheduler,\n      routes.calendar,\n      routes.data,\n      routes.error,\n    ];\n  },\n  coordinatorRoutes: (): RouteType[] => {\n    return [routes.index, routes.error];\n  },\n};\n","import User from \"../../../features/auth/domain/models/User\";\nimport { userControlRoutes } from \"./user-control.routes\";\n\nexport const routerManager = (user?: User) => {\n  if (user) {\n    switch (user.privileges) {\n      case \"coordinator\":\n        return userControlRoutes.coordinatorRoutes();\n      case \"professor\":\n        return userControlRoutes.professorRoutes();\n    }\n  }\n  return userControlRoutes.defaultRoutes();\n};\n","import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { session } from \"../../features/auth/domain/services/session\";\nimport { AppTheme } from \"../config/themes\";\nimport { DrawerContext, ThemeContext, UserContext } from \"../context/context\";\nimport { routerManager } from \"./user-control/router-manager\";\n\nexport const RoutesApp = () => {\n  const [user, setUser] = useState(session.getUser());\n  const [theme, setTheme] = useState(AppTheme.getTheme());\n  const [visibleDrawer, setvisibleDrawer] = useState(false);\n\n  useEffect(() => {\n    setUser(session.getUser());\n    setTheme(AppTheme.getTheme());\n  }, []);\n\n  return (\n    <UserContext.Provider value={user}>\n      <ThemeContext.Provider value={theme}>\n        <DrawerContext.Provider\n          value={{\n            visibleDrawer: visibleDrawer,\n            setVisibleDrawer: setvisibleDrawer,\n          }}\n        >\n          <BrowserRouter>\n            <Switch>\n              {routerManager(user).map((route, index) => {\n                return (\n                  <Route\n                    exact={route.exact}\n                    path={route.path}\n                    key={index}\n                    component={(props: any) => {\n                      return (\n                        <route.layout\n                          {...props}\n                          theme={theme}\n                          path={route.path}\n                        >\n                          <route.component\n                            {...props}\n                            user={user}\n                            theme={theme}\n                          />\n                        </route.layout>\n                      );\n                    }}\n                  />\n                );\n              })}\n            </Switch>\n          </BrowserRouter>\n        </DrawerContext.Provider>\n      </ThemeContext.Provider>\n    </UserContext.Provider>\n  );\n};\n","import \"./App.css\";\nimport { RoutesApp } from \"./core/router/Routes-App\";\n\nfunction App() {\n  return <RoutesApp />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}